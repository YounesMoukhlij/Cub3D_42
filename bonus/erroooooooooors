
door error 
NO ./assets/card1.png
SO  ./assets/card2.png
EA ./assets/card3.png
F 0,0,0
C 255,0,255
WE ./assets/card4.png



1111111111111111111111111             
1000000000000000000000001                          
1000000000000000000000001
1000000000000000000000001 1111111111111111
100000000000000000000000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
100000000000000000000000000000D0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
1000000000000000000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1000000000000000000000001
1000000000000000000000001
1000000000000000000000001
1000000000000000000000001
1000000000000000000000001
1000000000000000000000001
1000000000000000000000001
1000000000000000000000001
1000000000000000000000001
1000000000000000000000S001
10000000000000000000000011
1000000000000000000000001                          
1000000000000000000000001                          
1000000001011000000000001                          
1000000000000000000000001                          
1000000000000000000000001                          
1000000000000000000000001                          
1000000000000000000000001                          
1000000000000000000000001                          
1000000000000000000000001                          
1000000000000000000000001                          
1000000101000000000000001                          
1000000000000000000000001                 
1111111111111111111111111
 
1111111111111111111111111




2------------->fix the textures skilling 

go to draw/draw_utils_1 and remove ft_handle_image
change the datatype on t_cube struct of the offset_x and y to double 
replace the following functions
void    draw_plus(t_cube *game)
void    ft_draw_wall(t_cube *game, t_ray *ray)


void    draw_plus(t_cube *game)
{
    game->draws.dis = game->draws.i + game->draws.wall_heigth / 2  -  WINDOW_HEIGTH / 2;
  	game->offset_y = game->draws.dis * ((float)BOX_SIZE / game->draws.wall_heigth) / BOX_SIZE;
    game->draws.j = ((int)(game->offset_x * game->img_wall->width) + (int)(game->offset_y * game->img_wall->height) * game->img_wall->width) * 4;

    game->draws.r = game->img_wall->pixels[game->draws.j];
    game->draws.g = game->img_wall->pixels[game->draws.j + 1];
    game->draws.b = game->img_wall->pixels[game->draws.j + 2];
    game->draws.a = game->img_wall->pixels[game->draws.j + 3];
}

void    ft_draw_wall(t_cube *game, t_ray *ray)
{
    draw_wall_one(game, ray);
    game->draws.i = game->draws.top;
    if (game->hit_v)
        game->offset_x = fmod(ray->wall_y , BOX_SIZE) / BOX_SIZE;
    else
        game->offset_x = fmod(ray->wall_x , BOX_SIZE) / BOX_SIZE;
    while (game->draws.i < game->draws.bottom)
    {
        check_view(game, ray);
        draw_plus(game);
        mlx_put_pixel(game->img, ray->index, game->draws.i,
            ft_color(game->draws.r, game->draws.g, game->draws.b,
                game->draws.a));
        game->draws.i++;
    }
}


3------------> player movment fixing 
change data type of player_x and player_y to double 